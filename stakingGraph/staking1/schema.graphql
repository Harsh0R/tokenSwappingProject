type BalanceUpdated @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  poolId: BigInt! # uint256
  newBalance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DepositTimeUpdated @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  poolId: BigInt! # uint256
  newDepositTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DurationUpdated @entity(immutable: true) {
  id: Bytes!
  poolId: BigInt! # uint256
  newDuration: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PoolCreated @entity(immutable: true) {
  id: Bytes!
  poolId: BigInt! # uint256
  stakingToken: Bytes! # address
  rewardToken: Bytes! # address
  duration: BigInt! # uint256
  rewardRate: BigInt! # uint256
  active: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProfitWithdrawn @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  profit: BigInt! # uint256
  poolId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RewardRateUpdated @entity(immutable: true) {
  id: Bytes!
  poolId: BigInt! # uint256
  newRewardRate: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Staked @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  poolId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenCreated @entity(immutable: true) {
  id: Bytes!
  tokenAddress: Bytes! # address
  name: String! # string
  symbol: String! # string
  initialSupply: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserData @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  poolId: BigInt! # uint256
  referredBy: Bytes! # address
  withdrawnProfit: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdrawn @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  reward: BigInt! # uint256
  poolId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
