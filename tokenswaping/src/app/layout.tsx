import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/appcomponents/Navbar";
import ContractContextProvider from "@/Context/contractContect";

import {
  darkTheme,
  getDefaultConfig,
  RainbowKitProvider,
} from "@rainbow-me/rainbowkit";
import { WagmiProvider } from "wagmi";
import {
  polygonAmoy,
  mainnet,
  polygon,
  optimism,
  arbitrum,
  base,
} from "wagmi/chains";
import { QueryClientProvider, QueryClient } from "@tanstack/react-query";
import "@rainbow-me/rainbowkit/styles.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};



export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  // const config = getDefaultConfig({
  //   appName: "My RainbowKit App",
  //   projectId: "YOUR_PROJECT_ID",
  //   chains: [polygonAmoy, mainnet, polygon, optimism, arbitrum, base],
  //   ssr: true, // If your dApp uses server side rendering (SSR)
  // });

  // const queryClient = new QueryClient();
  return (
    <html lang="en" className="dark">
      {/* <WagmiProvider config={config}>
        <QueryClientProvider client={queryClient}>
          <RainbowKitProvider
            theme={darkTheme({
              ...darkTheme.accentColors.red,
            })}
          > */}
            <ContractContextProvider>
              <body className={inter.className}>
                <Navbar />
                {children}
              </body>
            </ContractContextProvider>
          {/* </RainbowKitProvider>
        </QueryClientProvider>
      </WagmiProvider> */}
    </html>
  );
}
